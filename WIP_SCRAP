
-- Create table
CREATE OR REPLACE  TEMP TABLE NEXUS.TEMP.attendance (
    student VARCHAR(10),
    date DATE,
    end_date DATE,
    attendance VARCHAR(10)
);

-- Insert data
INSERT INTO NEXUS.TEMP.attendance VALUES 
       ('A1', '2023-10-23', '2023-10-23', 'PRESENT'),
    ('A1', '2023-10-23', '2023-10-23', 'PRESENT'),
    ('A1', '2023-10-30', NULL, 'ABSENT'),
    ('A1', '2023-11-06', '2023-11-06', 'PRESENT'),
    ('A1', '2023-11-13', '2023-11-13', 'PRESENT'),
    ('A1', '2023-11-20', NULL, 'ABSENT'),
    ('A1', '2023-11-27', '2023-11-27', 'PRESENT'),
    ('A1', '2023-12-04', '2023-12-04', 'PRESENT'),
    ('A1', '2023-12-11', NULL, 'ABSENT'),
    ('A1', '2023-12-18', NULL, 'ABSENT');


UPDATE NEXUS.TEMP.attendance 
SET attendance = NULL
WHERE attendance = 'ABSENT'



WITH STAGE1 AS (
SELECT STUDENT,
DATE,
END_DATE,
ATTENDANCE,
DATE AS NEW_START_DATE,
LAG(date) OVER (PARTITION BY STUDENT ORDER BY date) AS previous_date,
CASE 
			WHEN ATTENDANCE IS NULL
				THEN 'D'
			ELSE NULL
			END AS IS_DELETED
FROM NEXUS.TEMP.attendance 
),
STAGE2 AS (
SELECT 
STUDENT,
DATE,
END_DATE,
ATTENDANCE,
NEW_START_DATE,
IS_DELETED,
CONDITIONAL_CHANGE_EVENT(NVL(IS_DELETED, ' ') = 'D') OVER (
			PARTITION BY STUDENT ORDER BY STUDENT
			) AS VAL_CHANGES,
FROM STAGE1
ORDER BY 1 ,2
)
SELECT 
STUDENT,
DATE,
END_DATE,
ATTENDANCE,
NEW_START_DATE,
IS_DELETED,
VAL_CHANGES,
MAX(NEW_START_DATE) OVER(PARTITION  BY NVL(IS_DELETED, ' '), VAL_CHANGES ORDER BY DATE) AS NEW_END_DATE 
FROM STAGE2
